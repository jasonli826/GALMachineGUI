<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <DropShadowEffect x:Key="TextShadowEffect"
                  Color="Black"
                  BlurRadius="3"
                  ShadowDepth="1"
                  Opacity="0.6"/>
    <Style x:Key="ImageToolButtonStyle" TargetType="Button">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="10,6"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#4CAF50" Offset="0"/>
                    <!-- Dark green -->
                    <GradientStop Color="#2E7D32" Offset="1"/>
                    <!-- Darker green -->
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="10" Background="{TemplateBinding Background}">
                        <Grid>
                            <Border x:Name="Glow" Background="{x:Null}" CornerRadius="10"/>
                            <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Margin="6">
                                <Image Source="{Binding Tag, RelativeSource={RelativeSource AncestorType=Button}}"
                                   Width="20" Height="20" Margin="0,0,6,0"/>
                                <TextBlock Text="{TemplateBinding Content}"
                                       VerticalAlignment="Center"
                                       Foreground="White"
                                       FontWeight="Bold"
                                       Effect="{StaticResource TextShadowEffect}"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Glow" Property="Background" Value="#55000000"/>
                            <!-- subtle dark overlay -->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Glow" Property="Background" Value="#882E3440"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TreeView Item Template -->
    <!--<HierarchicalDataTemplate DataType="{x:Type local:TreeItem}" ItemsSource="{Binding Children}">
        <StackPanel Orientation="Horizontal" Margin="3" Background="Transparent">
            <Image Source="{Binding IconPath}" Width="18" Height="18" Margin="0,0,5,0"/>
            <TextBlock Text="{Binding Name}" Foreground="Black"  VerticalAlignment="Center" FontSize="16"/>
        </StackPanel>
    </HierarchicalDataTemplate>-->

    <!-- Context Menu Style -->
    <ContextMenu x:Key="TreeViewItemContextMenu">
        <MenuItem Header="Delete" 
                  CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Background="Aquamarine"/>
        <MenuItem Header="Rename" 
          CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Background="Aquamarine"/>
    </ContextMenu>

    <!-- TreeViewItem Style -->
    <Style TargetType="TreeViewItem">
        <Setter Property="ContextMenu" Value="{StaticResource TreeViewItemContextMenu}"/>
        <Setter Property="ContextMenu" Value="{StaticResource TreeViewItemContextMenu}"/>
    </Style>

    <!-- ✅ NEW: DropShadowEffect for window panels -->
    <DropShadowEffect x:Key="DropShadowEffect"
                      Color="AntiqueWhite"
                      Opacity="0.5"
                      BlurRadius="30"
                      Direction="270"
                      ShadowDepth="10"/>


    <Style x:Key="ModernButton" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Width" Value="90"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#3B7F5A"/>
        <Setter Property="BorderBrush" Value="#388E3C"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <!-- Outer Border with a ScaleTransform for animation -->
                        <Border x:Name="border"
                          CornerRadius="20"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <!-- Inner Glow Effect -->
                            <Border CornerRadius="18" Margin="2">
                                <Border.Background>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="0.1" Color="#80FFFFFF"/>
                                        <GradientStop Offset="1" Color="Transparent"/>
                                    </RadialGradientBrush>
                                </Border.Background>
                            </Border>
                        </Border>

                        <!-- Button Content -->
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>

                    <!-- Triggers for Effects -->
                    <ControlTemplate.Triggers>
                        <!-- Mouse Over: Change colors and start animation -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#4E8F68"/>
                            <!-- Muted green -->
                            <!-- Lighter Green -->
                            <Setter TargetName="border" Property="BorderBrush" Value="#2F5D40"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="MouseOverStoryboard">
                                    <Storyboard>
                                        <!-- Scale up animation -->
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                               Storyboard.TargetProperty="ScaleX"
                               To="1.2" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                               Storyboard.TargetProperty="ScaleY"
                               To="1.2" Duration="0:0:0.2"/>
                                        <!-- Flashing effect: animate opacity between 1 and 0.5 -->
                                        <DoubleAnimation Storyboard.TargetName="border"
                               Storyboard.TargetProperty="Opacity"
                               From="1" To="0.5"
                               Duration="0:0:0.1"
                               AutoReverse="True"
                               RepeatBehavior="Forever"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryboard"/>
                                <!-- Restore original scale and opacity -->
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                               Storyboard.TargetProperty="ScaleX"
                               To="1" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                               Storyboard.TargetProperty="ScaleY"
                               To="1" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                               Storyboard.TargetProperty="Opacity"
                               To="1" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <!-- Click Effect -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#388E3C"/>
                            <!-- Dark Green -->
                            <Setter TargetName="border" Property="BorderBrush" Value="#1B5E20"/>
                        </Trigger>

                        <!-- Disabled State -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#BDBDBD"/>
                            <!-- Gray -->
                            <Setter TargetName="border" Property="BorderBrush" Value="#9E9E9E"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource ModernButton}" x:Key="ModernRedButton" TargetType="Button">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="DimGray"/>
                    <GradientStop Offset=".3" Color="Black"/>
                    <GradientStop Offset=".7" Color="Black"/>
                    <GradientStop Offset="1" Color="Red"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>

        <Setter Property="BorderBrush" Value="DarkRed"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <!-- Outer Border with a ScaleTransform for animation -->
                        <Border x:Name="border"
                        CornerRadius="20"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <!-- Inner Glow Effect -->
                            <Border CornerRadius="18" Margin="2">
                                <Border.Background>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="0.1" Color="#80FFFFFF"/>
                                        <GradientStop Offset="1" Color="Transparent"/>
                                    </RadialGradientBrush>
                                </Border.Background>
                            </Border>
                        </Border>

                        <!-- Button Content -->
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>

                    <!-- Triggers for Effects -->
                    <ControlTemplate.Triggers>
                        <!-- Mouse Over: Keep the same background and apply animation -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="DimGray"/>
                                        <GradientStop Offset=".3" Color="Black"/>
                                        <GradientStop Offset=".7" Color="Black"/>
                                        <GradientStop Offset="1" Color="Red"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="DarkRed"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="MouseOverStoryboard">
                                    <Storyboard>
                                        <!-- Scale up animation -->
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                 Storyboard.TargetProperty="ScaleX"
                                                 To="1.2" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                 Storyboard.TargetProperty="ScaleY"
                                                 To="1.2" Duration="0:0:0.2"/>
                                        <!-- Flashing effect: animate opacity between 1 and 0.5 -->
                                        <DoubleAnimation Storyboard.TargetName="border"
                                                 Storyboard.TargetProperty="Opacity"
                                                 From="1" To="0.5"
                                                 Duration="0:0:0.1"
                                                 AutoReverse="True"
                                                 RepeatBehavior="Forever"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="MouseOverStoryboard"/>
                                <!-- Restore original scale and opacity -->
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                 Storyboard.TargetProperty="ScaleX"
                                                 To="1" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="scaleTransform"
                                                 Storyboard.TargetProperty="ScaleY"
                                                 To="1" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="border"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="1" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <!-- Click Effect -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="DarkRed"/>
                                        <GradientStop Offset=".3" Color="Black"/>
                                        <GradientStop Offset=".7" Color="Black"/>
                                        <GradientStop Offset="1" Color="Maroon"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="BorderBrush" Value="Maroon"/>
                        </Trigger>

                        <!-- Disabled State -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#BDBDBD"/>
                            <!-- Gray -->
                            <Setter TargetName="border" Property="BorderBrush" Value="#9E9E9E"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ModernRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="8,0"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="#444"/>
        <Setter Property="BorderBrush" Value="#AAA"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10"
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#666"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="DodgerBlue"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#444"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="DodgerBlue"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- TabItem Style -->
    <Style TargetType="TabItem">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="Margin" Value="4,2,4,0"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border"
                         CornerRadius="10,10,0,0"
                         BorderBrush="Transparent"
                         BorderThickness="1"
                         Margin="2"
                         Padding="10,6">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Color="#7F00FF" Offset="0"/>
                                <GradientStop Color="#E100FF" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter x:Name="ContentSite"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       ContentSource="Header"/>
                    </Border>

                    <ControlTemplate.Triggers>

                        <!-- Selected Tab -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Color="#00C6FF" Offset="0"/>
                                        <GradientStop Color="#0072FF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF6EC6"/>
                        </Trigger>

                        <!-- Mouse Hover -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Color="#FF512F" Offset="0"/>
                                        <GradientStop Color="#DD2476" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TabControl Style -->
    <Style TargetType="TabControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <DockPanel>
                            <TabPanel Name="HeaderPanel"
                                   DockPanel.Dock="Top"
                                   IsItemsHost="True"
                                   Margin="4,4,4,0"
                                   Background="Transparent"/>
                            <Border BorderThickness="2"
                                 CornerRadius="0,0,10,10"
                                 BorderBrush="#CCCCCC"
                                 Background="White"
                                 Margin="4">
                                <ContentPresenter Name="ContentSite"
                                               Margin="10"
                                               ContentSource="SelectedContent"/>
                            </Border>
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>